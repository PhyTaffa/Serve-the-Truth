Here's the updated version with the addition you requested regarding the MySQL root password:

---

# **How to Run This Server on Your 'State-of-the-Art' Machine (RIP)**

Hey, hey people. Filippo here.

Congratulations! You've just set foot in the **wonderful, soul-crushing world of server hosting**, where your **glorious, state-of-the-art machine** (aka the potato you call your "gaming rig") will become a **fully-fledged server**. It‚Äôs going to be **an adventure**‚Ä¶ mostly involving screaming at your screen.

---

### **1. Open the Project in VS Code (You Actually Managed to Do This)**

So, you cloned the repo from GitHub. Incredible. Now, open it in **VS Code**, the sacred text editor of our times. I mean, if you‚Äôre still using Notepad, I‚Äôm amazed you even found this readme without getting lost on the way. Press that shiny **VS Code** button, open the cloned repository, and let‚Äôs see if you can navigate your way out of this nightmare. No pressure. But, you know, there‚Äôs *always* pressure.

I‚Äôm just going to say this upfront: This is the **only way I know how to do it**, so buckle up. If you find a better way, don‚Äôt tell me‚ÄîI‚Äôm not ready for that kind of responsibility.

---

### **2. Install the Magic Packages (Not as Hard as It Sounds, I Swear)**

Okay, now it‚Äôs time to **actually work**, but don‚Äôt panic, it‚Äôs not that bad. You won‚Äôt have to sell your soul or figure out why your computer is making weird noises. Just open a **PowerShell terminal inside VS** (because that‚Äôs what all the cool kids use, right?). Run this command:

```bash
npm install express express-session mysql2 cors
```

**CCP-Approved‚Ñ¢**

I know what you‚Äôre thinking: *Why in the hell do I need all this stuff?* Let‚Äôs break it down, champ:

- **express**: Because setting up an HTTP server by hand is for **absolute masochists** who clearly have nothing better to do.
- **express-session**: It will remember you. Unlike that one game where you forgot to save and lost hours of progress. Don‚Äôt worry, your server will always remember you.
- **mysql2**: Because your server needs to talk to a **database**‚Äîand **database** sounds like something you can‚Äôt escape from, but it‚Äôs just a fancy word for "data storage" that will never, ever, ever work on the first try.
- **cors**: It makes your server not spontaneously combust when it talks to the outside world. Your server won‚Äôt implode from external requests, but don‚Äôt hold your breath for anything else.

Once you type this out, hit **Enter**, and sit back. The terminal will work its magic and install everything while you stare blankly at the screen and wonder if you‚Äôve made a terrible mistake.

---

### **3. Install Nodemon (The Lazy Way)**

Here‚Äôs where things get even lazier. Instead of manually restarting your server every time you make a change, you‚Äôre going to install **nodemon** globally, so it‚Äôll do **half the work for you**. Open your terminal, inside vs code, and run this:

```bash
npm install -g nodemon
```

**Pro Tip**: Don‚Äôt worry about typing it all out every time. This is **global** installation, so it‚Äôll be available everywhere.

---

### **4. Download the Database (Don't Panic, It's Just MySQL)**

Alright, you‚Äôve made it this far‚Äînow let‚Äôs talk about getting your **MySQL database** up and running. You‚Äôre going to need **MySQL Server 8.2** (or **any version over 8.0**) and **MySQL Workbench 8.0.xx**. If you think this will be the smoothest part of the setup, I‚Äôve got some bad news: it won‚Äôt be. But hey, at least we‚Äôre not setting up **PostgreSQL**‚Äîlet‚Äôs count our blessings.

#### **Step 1: Download MySQL Server 8.2 (or Later)**

First things first: head over to the official **MySQL website**. Don‚Äôt Google ‚ÄúMySQL download‚Äù unless you want to get lost in a labyrinth of third-party websites. Go to this direct link:  
[Download MySQL Server 8.2 (or later)](https://dev.mysql.com/downloads/installer/).

Now, here‚Äôs where you *might* get a little confused:

- **Select your operating system**: Windows, MacOS, Linux‚Äîpick your poison. I'm assuming you're on Windows because that's where the magic happens, but if you‚Äôre using Linux, good luck, my friend. You're on your own.
  
- **Choose the MySQL Installer**: You‚Äôll get an option for a web installer or a full installer. **Full installer** is the way to go because you don‚Äôt want to be **downloading dependencies** every time you blink.

Once it‚Äôs downloaded, run the installer and let it do its thing. It will ask you if you want the **Developer Default** setup, or a **Custom** setup. Choose **Developer Default** unless you want to spend 45 minutes unchecking random options because you have no idea what they do. Pro tip: leave everything checked. The only thing you might not need is **MySQL Workbench**, but if you‚Äôre into making your life harder, go ahead and install it.

**IMPORTANT NOTE**: Do **NOT** forget the password you set for the **root** user during installation. **Seriously**. We both know you‚Äôre not going to create a new user‚Äînobody ever does. So when it asks for the password, **make sure you remember it** (or store it somewhere safe). You‚Äôll be using the **root** user for this setup, and it will be your lifeline (or your downfall) throughout this process.

#### **Step 2: Install MySQL Workbench 8.0.xx**

Now, for **MySQL Workbench 8.0.xx**. This is an essential tool to manage and interact with your MySQL server through a nice graphical interface, because who wants to type SQL commands all day? Not you, I‚Äôm sure.

Head over to the MySQL Workbench download page:  
[Download MySQL Workbench 8.0.xx](https://dev.mysql.com/downloads/workbench/).

Choose your operating system and download the installer. Once that‚Äôs done, run the installer and follow the prompts.

#### **Step 3: Set Up Your Database**

Now that you‚Äôve got MySQL installed, it‚Äôs time to **set up the database**. Don‚Äôt worry, it‚Äôs not as terrifying as it sounds.

1. **Launch MySQL Server**: Open up **MySQL Command Line Client** and **log in** using the root user and the password you set during installation.


```bash
mysql -u root -p
```

2. **Create the Database**: This part is easy. You‚Äôll need to create the database for your server to interact with. Run this command:

```sql
CREATE DATABASE your_db_name;
```

Pro tip: Replace **your_db_name** with something that actually makes sense. Calling it ‚Äúserverdb‚Äù or ‚Äúmydatabase‚Äù is just asking for trouble. Get creative, maybe call it **"TheEndOfMySanity"** or **"DoNotDisturb"**.

3. **Exit MySQL**: Once you‚Äôve created your database, type `exit` to leave the MySQL Command Line. You‚Äôre done here for now.

---

### **5. Update Database Information (Do NOT Mess This Up)**

Here it is: the **danger zone**. This is where everything can go horribly, horribly wrong. Forget the database credentials, and you'll end up with a server that's **more useless than your childhood dreams**. Open the `database.js` file and change the database information to something *you can actually use*.

You‚Äôll need to update:

- **host**: Set this to 'localhost' if you‚Äôre keeping it simple, or *go big* with a remote server. But remember, that‚Äôs a step into **uncharted waters**, so don‚Äôt get cocky.
- **user**: Your **MySQL username**. Pro tip: It should **not** 'root' but knowing you, the chance that ityou didnt create another user are inflated, just how i like it.
- **password**: Remember that password you set? Yeah, it‚Äôs the one you don‚Äôt share with anyone. Hopefully you still remember it.
- **database**: The name of the database. It **better exist**, because this isn‚Äôt a guessing game. *Throwing random words at it won‚Äôt help*.

Here‚Äôs what your `database.js` should look like once you update it:

```javascript
const mysql = require('mysql2');

const connection = mysql.createConnection({
  host: 'localhost',  // Change this if you're a masochist and using a remote server
  user: 'your_db_user',  // Not 'root', for the love of God, but it's going to be "root" either way
  password: 'your_db_password',  // You remembered this, right?
  database: 'your_db_name'  // Yes, this must exist. Please don‚Äôt just type gibberish
});
```

If you **don‚Äôt** mess this up, your server will **thank you**. If you do, well, prepare for **total anarchy**.

---

### **6. Run the Server (Prepare for Glory)**

Alright, enough procrastinating. It‚Äôs time to launch this **beast**. Open up a **Command Prompt** (because we‚Äôre not about that "fancy" PowerShell life for this step),

 and run:

```bash
nodemon api/index.js
```

This magical incantation will summon your server into existence. **Don‚Äôt panic** when your screen fills up with text like you‚Äôre trying to read the matrix. That‚Äôs just the server doing its thing. You‚Äôll see something like this:

```
Server is running on http://0.0.0.0:3000 ü§ô
Connected to the database! Please don‚Äôt break anything.
```

You did it. **Congratulations**, your server is now alive, and it will **exist until it inevitably breaks**, which will happen because servers have a way of doing that.

---

### **7. Stop the Madness (Before It Consumes Your Soul)**

Want to stop the server? Maybe you‚Äôre tired, maybe the **CCP is watching**, or maybe you just want to play more **breeders of nephelim**. Whatever the case, don‚Äôt sweat it. You don‚Äôt need to restart your whole computer like a savage.

Just press **Ctrl + C** in your **Command Prompt**, and your server will peacefully die. It‚Äôs that easy. The **circle of life** continues, and you can resume living in your perpetual state of confusion.

---

**That‚Äôs It!** You‚Äôve officially set up a server that will run until your "state-of-the-art" machine decides it‚Äôs had enough. If you run into any issues, just blame your database, your toaster, or your hamster who‚Äôs secretly running the server behind your back.

Good luck, and may your server bring you more joy than that one time you tried to set up a Minecraft server. Or, at the very least, more joy than the last 45 minutes of your life you just spent reading this.

---

### Additional Notes:

- **Remember**: Your server will break. It always does. It‚Äôs not a matter of *if*, but *when*. Be prepared to troubleshoot, possibly for hours.
- If this guide somehow helped you get the server running, I‚Äôd love a thank-you note. Or, you know, a **massive cash donation**. Just saying.
- Also, don‚Äôt forget: **The CCP is always watching**.

---